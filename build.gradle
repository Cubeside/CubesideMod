plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
    id "com.gradleup.shadow" version "9.0.0-beta2"
    id "com.modrinth.minotaur" version "2.4.3"
}

defaultTasks('clean', 'build', 'publishToMavenLocal')

version = project.mod_version
group = project.maven_group

repositories {
    maven {url "https://maven.terraformersmc.com/releases"}
    maven {url "https://maven.shedaniel.me/"}
    maven {url "https://plugins.gradle.org/m2/"}
    maven {url "https://masa.dy.fi/maven"}
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
    }
    maven {url "https://minecraft.guntram.de/maven/"}
    maven { url = "https://plugins.gradle.org/m2/" }
    maven { url = 'https://maven.fallenbreath.me/releases' }
    mavenCentral()
    mavenLocal()
}

configurations {
    shade
    compileClasspath.extendsFrom shade
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modApi("com.terraformersmc:modmenu:${project.modmenu_version}")

    modImplementation include("fi.dy.masa.malilib:malilib-fabric-1.21.6-rc1:${project.malilib_version}")
    modImplementation "de.cubeside.cubesideutils.fabric:CubesideUtilsFabricClient:${project.cubeside_utils_version}"

    implementation(platform("org.dizitart:nitrite-bom:4.3.0"))
    implementation('org.dizitart:nitrite')
    implementation('org.dizitart:nitrite-mvstore-adapter')
    implementation('org.dizitart:nitrite-jackson-mapper')
    implementation('com.h2database:h2-mvstore:2.3.232')

    modImplementation "maven.modrinth:sodium:${project.sodium_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

loom {
    accessWidenerPath = file("src/main/resources/cubeside.accesswidener")
    mixin {
        setUseLegacyMixinAp(false)
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 21 || JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_21)) {
        it.options.release = targetJavaVersion
    }
}

java {
    archivesBaseName = project.archives_base_name
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

shadowJar {
    archiveClassifier.set('shaded')

    base {
        archivesName.set(project.archives_base_name + "-" + project.minecraft_version)
    }
    dependencies {
        include(dependency('org.dizitart:nitrite-bom'))
        include(dependency('org.dizitart:nitrite'))
        include(dependency('org.dizitart:nitrite-mvstore-adapter'))
        include(dependency('org.dizitart:nitrite-jackson-mapper'))
        include(dependency('com.h2database:h2-mvstore'))
    }

    relocate 'org.dizitart', 'de.fanta.cubeside.libs.nitrite'
    relocate 'com.h2database', 'de.fanta.cubeside.libs.h2database'
    minimize()
    minimizeJar.set(true)
}

remapJar {
    dependsOn(shadowJar)
    mustRunAfter(shadowJar)
    inputFile = shadowJar.archivePath
}

tasks.publish.dependsOn build
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId archivesBaseName

            // add all the jars that should be included when publishing to maven
            //artifact(jar)             { builtBy remapJar }
            from components.java
        }
    }

    repositories {
        maven {
            url "$projectDir/../../CommonMaven"
        }
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = project.modrinth_id
    versionNumber = project.mod_version
    versionName = "CubesideMod ${project.minecraft_version}-${project.mod_version}"
    versionType = isMCVersionNonRelease() ? "beta" : "release"
    changelog = file("changelog.md").text
    uploadFile = remapJar
    gameVersions = [ project.minecraft_version ]
    loaders = [ "fabric" ]
    dependencies {
        required.project 'fabric-api'
        required.project 'cubesideutilsfabricclient'
    }
}

boolean isMCVersionNonRelease() {
    return project.minecraft_version.matches('^\\d\\dw\\d\\d[a-z]$') || project.minecraft_version.matches('\\d+\\.\\d+-(pre|rc)(\\d+)')
}
